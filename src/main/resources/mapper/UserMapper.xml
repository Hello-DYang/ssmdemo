<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.yang.dao.UserMapper" >

  <resultMap id="BaseResultMap" type="com.yang.pojo.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, sex, age, address,photo
  </sql>

<!--  查询所有-->
  <select id="getuserList" resultType="com.yang.pojo.User">
    select id,username,sex,age,address,photo from user
      <where>
        <if test="username != null and username !=''" >
          username like CONCAT('%',concat(#{username,jdbcType=VARCHAR}),'%')
        </if>
      </where>
  </select>

<!--  主键查询-->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

<!--  根据id删除-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>

<!--  插入-->
    <insert id="insert" parameterType="com.yang.pojo.User" >
    insert into user (id, username, sex,
      age, address)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},
      #{age,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR})
  </insert>

<!--  批量插入-->
  <insert id="insertByList">
    insert into user (username, sex, age, address, photo)
    values
    <foreach collection="list" item="user" separator=",">
      (#{user.username},#{user.sex,jdbcType=VARCHAR},#{user.age},#{user.address,jdbcType=VARCHAR},#{user.photo,jdbcType=VARCHAR})
    </foreach>
  </insert>

<!--  有选择的插入-->
  <insert id="insertSelective" parameterType="com.yang.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="address != null" >
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

<!--  有选择的更新-->
  <update id="updateByPrimaryKeySelective" parameterType="com.yang.pojo.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        photo = #{photo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
<!--  通过主键进行更新-->
  <update id="updateByPrimaryKey" parameterType="com.yang.pojo.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

<!--  批量更新通过主键-->
  <update   id="updateByIdList" >
    update user
    <set >
      <if test="sex != null and sex !='' " >
        sex = #{sex,jdbcType=VARCHAR}
      </if>
    </set>
    where id
    <foreach collection="idList" item="id" open="in(" close=")" separator=",">
         #{id}
    </foreach>
  </update>
</mapper>